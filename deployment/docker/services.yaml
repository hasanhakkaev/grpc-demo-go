services:
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/monitoring/prometheus
    networks:
      - monitoring
    depends_on:
      db:
        condition: service_healthy

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monitoring

  db:
    image: postgres:13
    container_name: postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_HOST: "localhost"
      POSTGRES_DB: "postgres"
    volumes:
      - db_data:/tmp/db_data
    networks:
      - persistence
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 2s
      retries: 5

  db-exporter:
    container_name: postgres-exporter
    image: quay.io/prometheuscommunity/postgres-exporter
    ports:
      - "9187:9187"
    environment:
        DATA_SOURCE_USER: "postgres"
        DATA_SOURCE_PASS: "postgres"
        DATA_SOURCE_URI: "host.docker.internal:5432/postgres?sslmode=disable"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - monitoring

networks:
  monitoring:
    name: "monitoring"
  persistence:
    name: "persistence"

volumes:
  db_data:
  prometheus_data:
  events_data: